import org.junit.Test
import kotlin.test.assertEquals
import com.hiperbou.enigma.*

class EnigmaTests {
    fun defaultMachine(plugboardConfig:String = ""): Array<IScrambler> {
        val plugboard = Plugboard(plugboardConfig, alphabet)
        val rotor3 = Rotor(rIII, alphabet)
        val rotor2 = Rotor(rII, alphabet)
        val rotor1 = Rotor(rI, alphabet)
        val reflector = Reflector(reflectorB, alphabet)
        return arrayOf<IScrambler>(plugboard,
                Connector(plugboard, rotor3),
                RotateAlways(rotor3),
                Connector(rotor3, rotor2),
                RotateNotchDoubleStep(rotor2,rotor3),
                Connector(rotor2, rotor1),
                RotateNotch(rotor1,rotor2),
                Connector(rotor1, reflector),
                reflector)
    }

    @Test
    fun helloWorld() {
        val encoded = encode("HELLOWORLD",  defaultMachine())
        val decoded = encode(encoded,  defaultMachine())

        assertEquals("ILBDAAMTAZ", encoded)
        assertEquals("HELLOWORLD", decoded)
    }

    @Test
    fun plugboardTest() {
        val plugboardConfig = "AB CD EF GH IJ KL MN OP QR ST"

        val encoded = encode("ABCDEFGHIJKLMNOPQRSTUVWXYZ", defaultMachine(plugboardConfig))
        val decoded = encode(encoded, defaultMachine(plugboardConfig))

        assertEquals("BCIAHMSKJUPDSQCVOGHSSMDENF", encoded)
        assertEquals("ABCDEFGHIJKLMNOPQRSTUVWXYZ", decoded)
    }

    @Test
    fun simpleEncodingTest(){
        val scramblers = defaultMachine()

        assertEquals("BDZGO", encode("AAAAA",scramblers)) //"BDZGO"
        assertEquals("YJIFK", encode("BBBBB",scramblers)) //"AJLCS"
        assertEquals("WKQOY",encode("CCCCC",scramblers)) //"QREBN"
        assertEquals("SAMIG", encode("DDDDD",scramblers)) //"MAJLI"
    }

    @Test
    fun doubleStepTest() {
        val plugboard = Plugboard("", alphabet)
        val rotor3 = Rotor(rIII, alphabet)
        val rotor2 = Rotor(rII, alphabet)
        val rotor1 = Rotor(rI, alphabet)
        val reflector = Reflector(reflectorB, alphabet)
        val scramblers = arrayOf<IScrambler>(plugboard,
                Connector(plugboard, rotor3),
                RotateAlways(rotor3),
                Connector(rotor3, rotor2),
                RotateNotchDoubleStep(rotor2,rotor3),
                Connector(rotor2, rotor1),
                RotateNotch(rotor1,rotor2),
                Connector(rotor1, reflector),
                reflector)

        rotor3.rotation = 19
        rotor2.rotation = 4
        rotor1.rotation = 16
        fun getRotorsPosition():String {
            return "${alphabet[rotor1.rotation]}${alphabet[rotor2.rotation]}${alphabet[rotor3.rotation]}"
        }
        assertEquals("QET", getRotorsPosition())

        assertEquals("IHRWF", encode("AAAAA", scramblers))
        assertEquals("RGY", getRotorsPosition())

        assertEquals("YLGKK", encode("BBBBB", scramblers))
        assertEquals("RGD", getRotorsPosition())

        assertEquals("HAAWW", encode("CCCCC", scramblers))
        assertEquals("RGI", getRotorsPosition())

        assertEquals("ISPZL", encode("DDDDD", scramblers))
        assertEquals("RGN", getRotorsPosition())
    }

    @Test
    fun innerRingTest() {
        val plugboard = Plugboard("", alphabet)
        val rotor3 = Rotor(rIII, alphabet)
        val rotor2 = Rotor(rII, alphabet)
        val rotor1 = Rotor(rI, alphabet)
        val reflector = Reflector(reflectorB, alphabet)
        val scramblers = arrayOf<IScrambler>(plugboard,
                Connector(plugboard, rotor3),
                RotateAlways(rotor3),
                Connector(rotor3, rotor2),
                RotateNotchDoubleStep(rotor2,rotor3),
                Connector(rotor2, rotor1),
                RotateNotch(rotor1,rotor2),
                Connector(rotor1, reflector),
                reflector)

        rotor3.innerRingOffset = 1
        assertEquals("UBDZG", encode("AAAAA", scramblers))
        rotor3.rotation = 0
        assertEquals("OMAJLI", encode("DDDDDD", scramblers))
    }

    @Test
    fun innerRingTest2() {
        val plugboard = Plugboard("", alphabet)
        val rotor3 = Rotor(rIII, alphabet)
        val rotor2 = Rotor(rII, alphabet)
        val rotor1 = Rotor(rI, alphabet)
        val reflector = Reflector(reflectorB, alphabet)
        val scramblers = arrayOf<IScrambler>(plugboard,
                Connector(plugboard, rotor3),
                RotateAlways(rotor3),
                Connector(rotor3, rotor2),
                RotateNotchDoubleStep(rotor2,rotor3),
                Connector(rotor2, rotor1),
                RotateNotch(rotor1,rotor2),
                Connector(rotor1, reflector),
                reflector)

        rotor3.innerRingOffset = 1
        rotor2.innerRingOffset = 1
        assertEquals("GFEBR", encode("AAAAA", scramblers))
        rotor3.rotation = 0
        assertEquals("YRHQVR", encode("DDDDDD", scramblers))

        rotor3.innerRingOffset = 0
        rotor2.innerRingOffset = 1
        rotor1.innerRingOffset = 25
        rotor3.rotation = 0
        assertEquals("ONGIQ", encode("AAAAA", scramblers))
        rotor3.rotation = 0
        assertEquals("MKWXIE", encode("DDDDDD", scramblers))
    }

    @Test
    fun FullRotationsTest() {
        val repetitions = 26*25*26
        val a = (0..repetitions).map { "A" }.joinToString("")

        val encoded = encode(a,  defaultMachine())
        val decoded = encode(encoded,  defaultMachine())

        assertEquals("", encoded)
        assertEquals(a, decoded)
    }
}
